---

- name: Install jq
  yum:
    name: jq
    state: latest

- name: Ensure Tower API is available
  command: tower-cli version
  register: tower_cli_version
  until: tower_cli_version is succeeded
  retries: 120
  delay: 5

# We use the tower-cli manually here, even though Ansible has lots of tower_*
# modules, because the modules don't allow deletion by type and name only
- name: Remove demo artifacts
  shell: |
    set -e
    artifact="$(tower-cli {{ item.type }} list -Q name {{ item.name | quote }} -f id)"
    if [ -n "$artifact" ]; then tower-cli {{ item.type }} delete "$artifact"; fi
  with_items:
    - { type: job_template, name: "Demo Job Template" }
    - { type: inventory, name: "Demo Inventory" }
    - { type: project, name: "Demo Project" }
    - { type: credential, name: "Demo Credential" }
    - { type: organization, name: "Default" }

- name: Create Cluster-as-a-Service organisation
  tower_organization:
    name: "Cluster-as-a-Service"
    tower_verify_ssl: no

- name: Create cluster-admin user
  tower_user:
    username: cluster-admin
    email: "admin@cluster.jasmin"
    password: "{{ cluster_admin_password }}"
    tower_verify_ssl: no

# The tower_role module doesn't support the Inventory Admin role, so use tower-cli directly
# The cluster admin has permission to:
#   - View all objects in the Cluster-as-a-Service organization
#   - Execute existing job templates from the Cluster-as-a-Service organisation
#   - Create, update and delete inventories in the Cluster-as-a-Service organisation
- name: Grant required roles to cluster-admin user
  command: >
    tower-cli role grant
      --user "cluster-admin"
      --organization "Cluster-as-a-Service"
      --type {{ item | quote }}
  with_items:
    - auditor
    - execute
    - inventory_admin

# The deployment credential belongs to the Cluster-as-a-Service organisation
- name: Create deploy user credential
  tower_credential:
    name: "Deploy User"
    organization: "Cluster-as-a-Service"
    kind: openstack
    host: "{{ openstack_auth_url }}"
    domain: "{{ openstack_domain_name }}"
    project: "{{ openstack_project_id }}"
    username: "{{ cluster_deploy_username }}"
    password: "{{ cluster_deploy_password }}"
    tower_verify_ssl: no

- name: Create Cluster-as-a-Service resources
  include_tasks: create_cluster_resources.yml
  with_items:
    - name: Kubernetes
      description: "Deployment, scaling and maintenance of Kubernetes clusters."
      git_url: https://github.com/cedadev/k8s-ansible.git
      playbook: cluster_openstack.yml
      survey_spec:
        - question_name: "Upgrade system packages?"
          question_description: >
            If yes, system packages will be upgraded (including patch versions of Kubernetes).
          variable: "upgrade_packages"
          type: "multiplechoice"
          choices: |
            yes
            no
          default: "no"
          required: true
        - question_name: "Upgrade Kubernetes?"
          question_description: >
            If yes, Kubernetes will be upgraded to the latest version.
            System packages will be necessarily upgraded.
          variable: "upgrade_kubernetes"
          type: "multiplechoice"
          choices: |
            yes
            no
          default: "no"
          required: true
      inventory_defaults:
        cluster_name: kubernetes
        cluster_network: "{{ default_cluster_network }}"
        cluster_keypair: "{{ default_cluster_keypair }}"
        master_flavor: j3.medium
        worker_flavor: j3.medium
        num_workers: 3
        root_volume_size: 40
  loop_control:
    loop_var: cluster_type
