---
heat_template_version: 2016-04-08


description: >
  Resource for an AWX server.


parameters:
  image:
    type: string
    label: The image to use (must be CentOS 7)
    # This is the ID of the current CentOS 7 image in the production JASMIN Cloud
    default: d7df64a3-9b2e-4ff2-820f-4481671d1dcf
    constraints:
      - custom_constraint: glance.image

  flavor:
    type: string
    label: Flavor to use
    constraints:
      - custom_constraint: nova.flavor

  key_name:
    type: string
    label: SSH key pair for access
    constraints:
      - custom_constraint: nova.keypair

  network:
    type: string
    label: Private network to use
    constraints:
      - custom_constraint: neutron.network

  root_volume_size:
    type: number
    label: Size of volume for root filesystem
    default: 40

  floating_ip:
    type: string
    label: Floating IP to use


resources:
  awx_admin_password:
    type: OS::Heat::RandomString
    properties:
      length: 32

  # Use a wait handle to detect when the configuration is complete
  wait_handle:
    type: OS::Heat::WaitConditionHandle
    properties:
      signal_transport: TOKEN_SIGNAL

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: wait_handle }
      timeout: 1200

  server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "OS::stack_name" }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - network: { get_param: network }
      image: { get_param: image }
#      block_device_mapping_v2:
#        - image_id: { get_param: image }
#          volume_size: { get_param: root_volume_size }
#          delete_on_termination: true
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            {
              # Trap any errors and mark the wait handle as failed
              function notify_error {
                wc_notify --data-binary '{"status": "FAILURE"}'
                exit 1
              }
              trap notify_error ERR
              # Run the Ansible playbook to configure
              yum install -y git ansible
              git clone https://github.com/cedadev/jasmin-cluster-manager.git /opt/jasmin-cluster-manager
              ansible-galaxy install -f -r /opt/jasmin-cluster-manager/roles/requirements.yml
              ansible-playbook -i "127.0.0.1," -c local  \
                -e "awx_admin_password=$awx_admin_password"  \
                -e "default_cluster_network=$cluster_network"  \
                -e "default_cluster_keypair=$cluster_keypair"  \
                -e "openstack_project_id=$project_id"  \
                /opt/jasmin-cluster-manager/playbook.yml
              wc_notify --data-binary '{"status": "SUCCESS"}'
            } 2>&1 | tee /var/log/jasmin-cluster-manager-init.log
          params:
            $awx_admin_password: { get_attr: [awx_admin_password, value] }
            $cluster_network: { get_param: network }
            $cluster_keypair: { get_param: key_name }
            $project_id: { get_param: "OS::project_id" }
            wc_notify: { get_attr: [wait_handle, curl_cli] }

  fip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_param: floating_ip }
      port_id: { get_attr: [server, addresses, { get_param: network }, 0, port] }


outputs:
  OS::stack_id:
    value: { get_resource: server }

  awx_admin_password:
    value: { get_attr: [awx_admin_password, value] }
